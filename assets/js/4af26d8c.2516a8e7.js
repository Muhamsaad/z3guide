"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[575],{7120:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>u});var o=s(3117),i=(s(7294),s(3905)),n=s(7689);const r={},c=void 0,d={unversionedId:"test",id:"test",title:"test",description:"hi",source:"@site/docs/test.md",sourceDirName:".",slug:"/test",permalink:"/rise4fun/docs/test",draft:!1,editUrl:"https://github.com/microsoft/rise4fun/tree/main/website/docs/test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Strings, Sequences and Regular Expressions",permalink:"/rise4fun/docs/sequences"}},a={},u=[{value:"hi",id:"hi",level:2}],l={toc:u};function m(e){let{components:t,...s}=e;return(0,i.kt)("wrapper",(0,o.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hi"},"hi"),(0,i.kt)(n.Z,{input:{code:';; some z3 code involving quotes\n(declare-const a String)\n(declare-const b String)\n(assert (= (str.++ b a) (str.++ "abc" b)))\n(check-sat)\n(get-model)'},mdxType:"Z3CodeBlock"}),(0,i.kt)(n.Z,{input:{code:"// test code for JS code injection (looks like it doesn't go thru?)\n<img src='' onerror='alert(\"hi\")'></img>"},mdxType:"Z3CodeBlock"}),(0,i.kt)(n.Z,{input:{code:";; testing quote symbols ``''\"\""},mdxType:"Z3CodeBlock"}))}m.isMDXComponent=!0}}]);