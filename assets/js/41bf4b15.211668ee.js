"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[182],{301:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>r,toc:()=>l});var o=t(3117),s=(t(7294),t(3905));t(7689);const n={title:"Conclusion",sidebar_position:18},a=void 0,r={unversionedId:"logic and theories/Conclusion",id:"logic and theories/Conclusion",title:"Conclusion",description:"Z3 is an efficient theorem prover used in many software testing, analysis and verification applications. In this tutorial, we covered its main capabilities using the textual interface. However, most applications use the Z3 programmatic API to access these features.",source:"@site/docs/01 - logic and theories/18 - Conclusion.md",sourceDirName:"01 - logic and theories",slug:"/logic and theories/Conclusion",permalink:"/z3guide/docs/logic and theories/Conclusion",draft:!1,editUrl:"https://github.com/microsoft/z3guide/tree/main/website/docs/01 - logic and theories/18 - Conclusion.md",tags:[],version:"current",sidebarPosition:18,frontMatter:{title:"Conclusion",sidebar_position:18},sidebar:"tutorialSidebar",previous:{title:"Recursive Functions",permalink:"/z3guide/docs/logic and theories/Recursive Functions"},next:{title:"Introduction",permalink:"/z3guide/docs/strategies/intro"}},c={},l=[],u={toc:l};function d(e){let{components:i,...t}=e;return(0,s.kt)("wrapper",(0,o.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Z3 is an efficient theorem prover used in many software testing, analysis and verification applications. In this tutorial, we covered its main capabilities using the textual interface. However, most applications use the Z3 programmatic ",(0,s.kt)("a",{parentName:"p",href:"https://z3prover.github.io/api/html/index.html"},"API")," to access these features."))}d.isMDXComponent=!0}}]);