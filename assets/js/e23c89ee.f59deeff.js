"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[497],{3819:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>n,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var r=t(3117),a=(t(7294),t(3905)),o=t(7689);const s={title:"Unicode Characters",sidebar_position:13},n=void 0,c={unversionedId:"logic and theories/Characters",id:"logic and theories/Characters",title:"Unicode Characters",description:"The Unicode sort ranges over unicode characters.",source:"@site/docs/01 - logic and theories/13 - Characters.md",sourceDirName:"01 - logic and theories",slug:"/logic and theories/Characters",permalink:"/z3guide/docs/logic and theories/Characters",draft:!1,editUrl:"https://github.com/microsoft/z3guide/tree/main/website/docs/01 - logic and theories/13 - Characters.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"Unicode Characters",sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Regular Expressions",permalink:"/z3guide/docs/logic and theories/Regular Expressions"},next:{title:"Special Relations",permalink:"/z3guide/docs/logic and theories/Special Relations"}},d={},h=[],l={toc:h};function p(e){let{components:i,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"Unicode")," sort ranges over unicode characters."),(0,a.kt)("p",null,"A few operations are supported over characters."),(0,a.kt)(o.Z,{input:{code:"(declare-const a Unicode)\n(declare-const b Unicode)\n(simplify (char.<= a b))\n(simplify (char.<= (_ Char 1) (_ Char 2)))\n(simplify (char.to_int (_ Char 1)))\n(simplify (char.is_digit (_ Char 1)))\n(simplify (char.is_digit (_ Char 49))) ; it is the digit 1",result:{output:"(char.<= a b)\n(char.<= (_ Char 1) (_ Char 2))\n1\n(char.is_digit (_ Char 1))\n(char.is_digit (_ Char 49))\n",error:"",status:"z3-ran",hash:"7b5fd576f5d2e339c4c78abc60b5c19f83e8df61"}},mdxType:"Z3CodeBlock"}),(0,a.kt)("p",null,"While Unicode is the default you can set the encoding of characters to Ascii (8 bit) or Bmp (16 bit)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(set-option :encoding unicode)\n(set-option :encoding ascii)\n(set-option :encoding bmp)\n")))}p.isMDXComponent=!0}}]);